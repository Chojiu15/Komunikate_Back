Post > localhost:3002/users/register > Body > raw

////////////////////////////////////////////////////////////////////////////////
User 4 - Kira Kira
////////////////////////////////////////////////////////////////////////////////

{
      "first_name": "Kira",
      "last_name": "Bira",
      "username": "kirabira",
      "password": "1995gio",
      "email": "kirabira@gmail.com",
      "user_role": "Mentor",
      "admin": false,
      "language": "Italian",
      "living_in_germany": true,
      "nationality": "Italian"

}

authToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuZXdVc2VyIjoiNjBjZmI0OTA4MjkxOTkwMDA0OGM2ZDVkIiwiaWF0IjoxNjI0MjI0OTEzfQ.rG3E6FWGFUSd9guDJZgnCLC0yoL374k6Z6grD99ajhc

UUID: 60cfb49082919900048c6d5d

////////////////////////////////////////////////////////////////////////////////
User 4 - Rizoto Nero
////////////////////////////////////////////////////////////////////////////////

{
      "first_name": "Rizoto",
      "last_name": "Nero",
      "username": "rantoni",
      "password": "1995gio",
      "email": "rantoni@gmail.com",
      "user_role": "Seeker",
      "admin": false,
      "language": "English",
      "living_in_germany": true,
      "nationality": "American"

}

authToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuZXdVc2VyIjoiNjBjZmI0OTA4MjkxOTkwMDA0OGM2ZDVkIiwiaWF0IjoxNjI0MjI0OTEzfQ.rG3E6FWGFUSd9guDJZgnCLC0yoL374k6Z6grD99ajhc

UUID: 60cfb49082919900048c6d5d


////////////////////////////////////////////////////////////////////////////////
User 2 - Max Mustermann
////////////////////////////////////////////////////////////////////////////////

{
      "first_name": "Max",
      "last_name": "Mustermann",
      "username": "max_muster",
      "password": "2021wbs",
      "email": "max_mustermann@gmail.com",
      "user_role": "Mentor",
      "admin": false,
      "language": "German",
      "living_in_germany": true,
      "nationality": "French"
}

authToken: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuZXdVc2VyIjoiNjBjOWU5YTAyODkxM2MwNTc4NzI0MTdmIiwiaWF0IjoxNjIzODQ1MjgwfQ.BDZLWULqhlTLNS0v8Mvo7G_pXUOXykltCVmTw0qv2jE

UUID: 60c9e9a028913c057872417f

////////////////////////////////////////////////////////////////////////////////
User 1 - John Doe
////////////////////////////////////////////////////////////////////////////////

{
      "first_name": "John",
      "last_name": "Doe",
      "username": "john_doe",
      "password": "wbs2021",
      "email": "johndoe@gmail.com",
      "user_role": "Seeker",
      "admin": false,
      "language": "English",
      "living_in_germany": true,
      "nationality": "American"
	
    }

authToken:
eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuZXdVc2VyIjoiNjBjOGIwYTFjZDNjMzA0MzJjYjc0ZmFlIiwiaWF0IjoxNjIzNzY1MTUzfQ.2MzgFhT_9DBo2Nrda7iJYlKf3irhOjCx_OuLS2AjYWY

ObjectId: 60c8b0a1cd3c30432cb74fae


const User = new Schema({
    first_name: {
        type: String,
        trim: true,
        required: true,
        minLength: 2,
        maxLength: 32,
    },
    last_name: {
        type: String,
        trim: true,
        required: true,
        minLength: 2,
        maxLength: 32,
    },
    username: {
        type: String,
        trim: true,
        required: true,
        minLength: 2,
        maxLength: 32,
        unique: true  //username should be unique
    },
    password: {
        type: String,
        required: true,
        trim: true,
        minLength: 8,
    },
    // Buffer to Base64 info:
    // https://stackoverflow.com/questions/37077712/store-image-file-in-binary-data-in-mongoose-schema-and-display-image-in-html-for/37091088
    profile_image: {
        data: Buffer,
        contentType: String
    },
    email: {
        type: mongoose.SchemaTypes.Email,
        lowercase: true,
        trim: true,
        required: true,
        unique: true //email should be unique
    },
    // https://stackoverflow.com/questions/34023169/how-to-define-a-boolean-field-in-mongodb-bson-document
    user_role: {
        type: String,
        enum: ["Seeker", "Mentor"],
        default: "Seeker",
        required: true,
    },

    /*     user_role_seeker: {
            type: Boolean,
            default: true,
            required: true,
        },
    
        user_role_mentor: {
            type: Boolean,
            default: false,
            required: true,
        }, */

    admin: {
        type: Boolean,
        default: false,
        required: true,
    },

    languages: {
        type: [String],
        required: true,
        trim: true,
    },

    living_in_germany: {
        type: Boolean,
        default: false,
        required: true
    },

    city_in_germany: {
        type: String,
        trim: true,
        minLength: 2,
        maxLength: 32,
    },

    to_germany_year: {  //changed this to make it clear what we store
        type: Number,
        minLength: 4,
        maxLength: 4,
    },

    student: {
        type: Boolean,
        default: true,
        required: false
    },

    worker: {
        type: Boolean,
        default: false,
        required: false
    },

    profession: {
        type: [String],
        trim: true,
    },

    interests: {
        type: [String],
        trim: true,
    },

    nationality: {
        type: [String],
        required: true,
        trim: true,
    },

    userBio: {
        type: String,
    },

    online: { //this one added for keeping track  of whether the user is logged in and online. do it automatically on login and then let the user decide on the front end whether to display the status or not
        type: Boolean,
        default: false
    },

    userMessages: [{
        type: Schema.Types.ObjectId,
        ref: "Messages"
    }],

    userComments: [{
        type: Schema.Types.ObjectId,
        ref: "Comments"
    }],

    userArticles: [{
        type: Schema.Types.ObjectId,
        ref: "Articles"
    }]
});

//Filtering out the password. It will not show up in res.json objects.
User.methods.toJSON = function () {
    const obj = this.toObject();
    delete obj.password;
    return obj;
}


module.exports = mongoose.model("User", User);